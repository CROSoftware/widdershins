<h1 id="{{=data.title_prefix}}">{{=data.api.info && data.api.info.title}} {{=data.version}}</h1>

{{? false}}
> Scroll down for {{? data.header.language_tabs.length}}code samples, {{?}}example requests and responses.{{? data.header.language_tabs.length}} Select a language for code samples from the tabs above or the mobile navigation menu.{{?}}
{{?}}

{{? data.api.info && data.api.info.description}}{{=data.api.info.description}}{{?}}

{{? data.api.servers }}
Base URLs:
{{~data.api.servers :s}}
* <a href="{{=s.url}}">{{=s.url}}</a>
{{ for(var v in s.variables) { }}
    * **{{=v}}** - {{=s.variables[v].description||''}} Default: {{=s.variables[v].default}}
{{? s.variables[v].enum}}
{{~ s.variables[v].enum :e}}
        * {{= e}}
{{~}}
{{?}}
{{ } }}
{{~}}
{{?}}

{{? data.api.info && data.api.info.termsOfService}}<a href="{{=data.api.info.termsOfService}}">Terms of service</a>{{?}}
{{? data.api.info && data.api.info.contact}}{{? data.api.info.contact.email}}Email: <a href="mailto:{{=data.api.info.contact.email}}">{{=data.api.info.contact.name || 'Support'}}</a> {{?}}{{? data.api.info.contact.url}}Web: <a href="{{=data.api.info.contact.url}}">{{= data.api.info.contact.name || 'Support'}}</a> {{?}}{{?}}
{{? data.api.info && data.api.info.license}}{{? data.api.info.license.url}}License: <a href="{{=data.api.info.license.url}}">{{=data.api.info.license.name}}</a>{{??}} License: {{=data.api.info.license.name}}{{?}}{{?}}

{{? data.api.components && data.api.components.securitySchemes }}
{{#def.security}}
{{?}}

{{ for (var tag in data.resources) { }}
{{ data.resource = data.resources[tag]; }}

<h1 id="{{=data.title_prefix+'-'+data.utils.slugify(tag)}}">{{= tag}}</h1>

{{? data.resource.description }}
{{= data.resource.description}}
{{?}}

{{? data.resource.externalDocs}}
<a href="{{=data.resource.externalDocs.url}}">{{=data.resource.externalDocs.description||'External documentation'}}</a>
{{?}}

{{ group_names = Object.keys(data.resources[tag].groups).sort(); }}

{{ for (var i in group_names) { }}
{{ group_name = group_names[i]; }}
## {{= group_name}}
{{ method_names = Object.keys(data.resources[tag].groups[group_name].methods).sort(); }}
{{ for (var j in method_names) { }}
{{ method_name = method_names[j];}}
{{ data.method = data.resources[tag].groups[group_name].methods[method_name]; }}
{{? (data.method.verb !== 'head' && data.method.verb !== 'options') }}
{{= data.templates.operation(data) }}
{{?}}
{{ } /* methods */ }}

{{ } /* groups */ }}

{{ } /* resources */ }}

{{? data.api.components && data.api.components.schemas }}
# Schemas

{{ for (var s in data.components.schemas) { }}
{{ var origSchema = data.components.schemas[s]; }}
{{ var schema = data.api.components.schemas[s]; }}

<h2 id="tocS{{=s.toLowerCase()}}">{{=s}}</h2>
{{? data.options.yaml }}
```yaml
{{=data.utils.yaml.safeDump(data.utils.getSample(schema,data.options,{},data.api))}}
{{??}}
```json
{{=data.utils.safejson(data.utils.getSample(schema,data.options,{},data.api),null,2)}}
{{?}}
```


<a id="schema{{=s.toLowerCase()}}"></a>

{{ var enums = [];
   var blocks = data.utils.schemaToArray(origSchema,-1,{trim:true,join:true},data);
   for (var block of blocks) {
     for (var p of block.rows) {
       if (p.schema && p.schema.enum) {
         for (var e of p.schema.enum) {
           enums.push({name:p.name,value:e});
         }
       }
     }
   }
}}

{{~ blocks :block}}
{{? block.title }}*{{= block.title}}*{{= '\n\n'}}{{?}}
{{? block.externalDocs}}
<a href="{{=block.externalDocs.url}}">{{=block.externalDocs.description||'External documentation'}}</a>
{{?}}

{{? block===blocks[0] }}
{{?}}
{{ outputTable = ''; }}
{{~ block.rows :p}}
{{ 
   if (outputTable.length < 1) {
     outputTable += "|Name|Type|Description|\n|---|---|---|\n";
   }

   typeDesc = p.safeType;

   description = '-';
   if (p.description) {
     description = p.description;
   }

   outputTable += "|`" + p.displayName + "`|" + typeDesc + "|" + description + "|\n";
}}
{{~}}
{{= outputTable }}
{{~}}
{{? (blocks[0].rows.length === 0) && (blocks.length === 1) }}
*None*
{{?}}

{{? enums.length > 0 }}
#### Enumerated Values

|Property|Value|
|---|---|
{{~ enums :e}}|{{=e.name}}|{{=data.utils.toPrimitive(e.value)}}|
{{~}}

{{?}}

{{ } /* of schemas */ }}

{{?}}

{{#def.footer}}

{{? data.options.discovery}}
{{#def.discovery}}
{{?}}
